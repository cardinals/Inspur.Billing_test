<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--左侧面板详细按钮正常时的背景色-->
    <Color x:Key="LeftPanel.Detail.Button.Normal.Background.Color">#FF2F59C4</Color>
    <!--左侧面板详细按钮划过时的背景色-->
    <Color x:Key="LeftPanel.Detail.Button.MouseOver.Background.Color">#FF137ee7</Color>
    <!--左侧面板详细按钮点击时的背景色-->
    <Color x:Key="LeftPanel.Detail.Button.Pressed.Background.Color">#FF0096ff</Color>
    <!--左侧面板详细按钮正常时的背景色-->
    <SolidColorBrush x:Key="LeftPanel.Detail.Button.Normal.Background" Color="{StaticResource LeftPanel.Detail.Button.Normal.Background.Color}"/>
    <!--左侧面板详细按钮划过时的背景色-->
    <SolidColorBrush x:Key="LeftPanel.Detail.Button.MouseOver.Background" Color="{StaticResource LeftPanel.Detail.Button.MouseOver.Background.Color}"/>
    <!--左侧面板详细按钮点击时的背景色-->
    <SolidColorBrush x:Key="LeftPanel.Detail.Button.Pressed.Background" Color="{StaticResource LeftPanel.Detail.Button.Pressed.Background.Color}"/>
    <Style x:Key="CommonRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LeftPanel.Detail.Button.Normal.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark" Fill="{DynamicResource LeftPanel.Detail.Button.Pressed.Background}" 
                                         MinWidth="12" MinHeight="12" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource LeftPanel.Detail.Button.MouseOver.Background}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource LeftPanel.Detail.Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource LeftPanel.Detail.Button.Pressed.Background}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource LeftPanel.Detail.Button.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>